version: "3"

x-log: &default
  restart: always
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "10"

x-env-general: &env-general
  TZ: ${TZ:-Europe/Moscow}

x-env-wiki: &env-wiki
  DB_HOST: ${DB_HOST:-db}
  DB_PORT: ${DB_PORT:-5432}
  DB_NAME: ${DB_NAME:-wiki}
  DB_USER: ${DB_USER:-wikijs}
  DB_PASS: ${DB_PASS:-wikijsrocks}
  DB_TYPE: ${DB_TYPE:-postgres}

x-env-elasticsearch: &env-elasticsearch
  MAX_LOCKED_MEMORY: ${MAX_LOCKED_MEMORY:-unlimited}
  ELASTICSEARCH_NODE_NAME: ${ELASTICSEARCH_NODE_NAME:-1-elasticsearch-master}
  ELASTICSEARCH_CLUSTER_HOSTS: ${ELASTICSEARCH_CLUSTER_HOSTS:-1-elasticsearch-master}
  ELASTICSEARCH_CLUSTER_NAME: ${ELASTICSEARCH_CLUSTER_NAME:-elasticsearch-cluster-wiki}
  ELASTICSEARCH_HEAP_SIZE: ${ELASTICSEARCH_HEAP_SIZE:-1g}
  ELASTICSEARCH_MINIMUM_MASTER_NODES: ${ELASTICSEARCH_MINIMUM_MASTER_NODES:-1}

x-env-postgres-exporter: &env-postgres-exporter
  DATA_SOURCE_NAME: ${DATA_SOURCE_NAME:-postgresql://wikijs:wikijsrocks@db:5432/postgres?sslmode=disable}

x-env-db-backup: &env-db-backup
  DB_TYPE:          ${DB_TYPE:-postgres}
  DB_HOST:          ${DB_HOST:-db}
  DB_NAME:          ${DB_NAME:-wiki}
  DB_USER:          ${DB_USER:-wikijs}
  DB_PASS:          ${DB_PASS:-wikijsrocks}
  DB_DUMP_FREQ:     ${DB_DUMP_FREQ:-1440}
  DB_DUMP_BEGIN:    ${DB_DUMP_BEGIN:-1900}
  DB_CLEANUP_TIME:  ${DB_CLEANUP_TIME:-8640}
  CHECKSUM:         ${CHECKSUM:-SHA1}
  COMPRESSION:      ${COMPRESSION:-ZSTD}
  SPLIT_DB:         ${SPLIT_DB:-FALSE}

services:
  wiki:
    image: ghcr.io/requarks/wiki:2
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          memory: 50M 
    security_opt:
      - no-new-privileges:true
    environment:
      <<: *env-wiki
      <<: *env-general
    <<: *default
    ports:
      - ${WIKI_PORT:-8000}:3000
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - wiki_temp:/wiki/data
    healthcheck:
      test: (curl http://localhost:3000/healthz | grep ok) || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: bitnami/elasticsearch:7.17.5
    hostname: "1-elasticsearch-master"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          memory: 50M 
    security_opt:
      - no-new-privileges:true
    volumes:
      - elasticsearch-data:/bitnami/elasticsearch/data
    environment:
      <<: *env-elasticsearch
      <<: *env-general
    <<: *default
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 1m

  elasticsearch-exporter:
    image: bitnami/elasticsearch-exporter:latest
    command:
      '--es.uri=http://elasticsearch:9200'
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          memory: 50M 
    security_opt:
      - no-new-privileges:true
    environment:
      <<: *env-general
    <<: *default
    ports:
      - ${ES_EX_PORT:-9114}:9114
    depends_on:
      elasticsearch:
        condition: service_healthy

  postgres-exporter:
    image: bitnami/postgres-exporter:latest
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          memory: 50M 
    security_opt:
      - no-new-privileges:true
    environment:
      <<: *env-general
      <<: *env-postgres-exporter
    <<: *default
    ports:
      - ${DB_EX_PORT:-9187}:9187
    depends_on:
      db:
        condition: service_healthy

  db-backup:
    image: tiredofit/db-backup
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          memory: 50M 
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./backups:/backup
    environment:
      <<: *env-db-backup
      <<: *env-general
    <<: *default
    depends_on:
      db:
        condition: service_healthy

volumes:
  db-data:
  elasticsearch-data:
  wiki_temp: